#!/usr/bin/env python
"""
ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจู SQL Server
"""

import os
import sys
import django

# ุฅุถุงูุฉ ุงููุดุฑูุน ุฅูู ุงููุณุงุฑ
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

# ุชุนููู ููู ุงูุฅุนุฏุงุฏุงุช
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'BusTrackingSystem.settings')

# ุฅุนุฏุงุฏ Django
django.setup()

from django.db import connection
from django.conf import settings

print("=" * 70)
print("๐ ุงุฎุชุจุงุฑ ุงุชุตุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช")
print("=" * 70)

# ุทุจุงุนุฉ ุงูุฅุนุฏุงุฏุงุช
print("\n๐ ุงูุฅุนุฏุงุฏุงุช ุงูุญุงููุฉ:")
print(f"  โข ูุญุฑู ูุงุนุฏุฉ ุงูุจูุงูุงุช: {settings.DATABASES['default']['ENGINE']}")
print(f"  โข ุงุณู ูุงุนุฏุฉ ุงูุจูุงูุงุช: {settings.DATABASES['default']['NAME']}")
print(f"  โข ุงูุฎุงุฏู: {settings.DATABASES['default'].get('HOST', 'ูู ูุชู ุงูุชุญุฏูุฏ')}")
print(f"  โข ุงููุณุชุฎุฏู: {settings.DATABASES['default'].get('USER', 'ูู ูุชู ุงูุชุญุฏูุฏ')}")

# ูุญุงููุฉ ุงูุงุชุตุงู
print("\n๐ ูุญุงููุฉ ุงูุงุชุตุงู...")

try:
    with connection.cursor() as cursor:
        # ุงุฎุชุจุงุฑ ุงูุงุชุตุงู
        cursor.execute("SELECT 1")
        print("โ ูุฌุญ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช!")
        
        # ุงูุญุตูู ุนูู ูุนูููุงุช ุงูุฎุงุฏู
        cursor.execute("SELECT @@VERSION")
        version = cursor.fetchone()[0]
        print(f"\n๐ ูุนูููุงุช SQL Server:")
        print(f"  {version}")
        
        # ุนุฏุฏ ุงูุฌุฏุงูู
        cursor.execute("""
            SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES 
            WHERE TABLE_SCHEMA = 'dbo'
        """)
        table_count = cursor.fetchone()[0]
        print(f"\n๐ ุนุฏุฏ ุงูุฌุฏุงูู: {table_count}")
        
        # ุงุณู ูุงุนุฏุฉ ุงูุจูุงูุงุช
        cursor.execute("SELECT DB_NAME()")
        db_name = cursor.fetchone()[0]
        print(f"๐ ุงุณู ูุงุนุฏุฉ ุงูุจูุงูุงุช: {db_name}")

except Exception as e:
    print(f"โ ูุดู ุงูุงุชุตุงู!")
    print(f"\n๐ด ุงูุฎุทุฃ:")
    print(f"  {type(e).__name__}: {str(e)}")
    
    print("\n๐ก ุงูุชูุตูุงุช:")
    if "ODBC Driver" in str(e):
        print("  1. ุชุซุจูุช ODBC Driver 17 for SQL Server")
        print("     https://learn.microsoft.com/en-us/sql/connect/odbc/download-odbc-driver-for-sql-server")
    
    if "Login failed" in str(e):
        print("  1. ุงูุชุญูู ูู ุงุณู ุงููุณุชุฎุฏู ููููุฉ ุงููุฑูุฑ ูู ููู .env")
        print("  2. ุงูุชุญูู ูู ุฃู SQL Server ูุนูู")
    
    if "Cannot open database" in str(e):
        print("  1. ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช BusTrackingDB")
        print("  2. ุงุณุชุฎุฏุงู: sqlcmd -S localhost\\SQLEXPRESS -U sa -P \"password\" -Q \"CREATE DATABASE BusTrackingDB\"")
    
    sys.exit(1)

print("\n" + "=" * 70)
print("โ ุฌููุน ุงูุงุฎุชุจุงุฑุงุช ูุฌุญุช! ุงููุธุงู ุฌุงูุฒ.")
print("=" * 70)
